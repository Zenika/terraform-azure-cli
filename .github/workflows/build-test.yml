name: build-test

# trigger on any push
# but not on master, tags or readme modifications
on:
  push:
    tags-ignore:
      - "**"
    branches:
      - "**"
      - "!master"
    paths-ignore:
      - "!README.md"
      - "!CODE_OF_CONDUCT.md"

env:
  ORGANIZATION: "zenika"
  IMAGE_NAME: "terraform-azure-cli"

jobs:
  load_supported_versions:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Save supported versions as output
        id: set-matrix
        run: |
          SUPPORTED_VERSIONS=$(cat ./supported_versions.json)
          SUPPORTED_VERSIONS="${SUPPORTED_VERSIONS//'%'/%25}"
          SUPPORTED_VERSIONS="${SUPPORTED_VERSIONS//$'\n'/%0A}"
          SUPPORTED_VERSIONS="${SUPPORTED_VERSIONS//$'\r'/%0D}"
          echo "::set-output name=matrix::${SUPPORTED_VERSIONS}"

  build:
    runs-on: ubuntu-latest

    needs: load_supported_versions

    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Save branch name as env var
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image release tag
        run: echo "IMAGE_RELEASE_TAG=release-${BRANCH}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Build image
        run: docker image build . --file Dockerfile --build-arg TERRAFORM_VERSION=${{ matrix.tf_version }} --build-arg AZURE_CLI_VERSION=${{ matrix.azcli_version }} --tag ${ORGANIZATION}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Save image
        run: docker image save -o $IMAGE_NAME-$BRANCH.tar $ORGANIZATION/$IMAGE_NAME:$BRANCH

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.BRANCH }}
          path: ${{ env.IMAGE_NAME }}-${{ env.BRANCH }}.tar

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout source
        uses: actions/checkout@master

      - name: Save branch name as env var
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Download image artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.BRANCH }}

      - name: Load image
        run: docker image load --input $IMAGE_NAME-$BRANCH.tar

      - name: run structure tests
        uses: plexsystems/container-structure-test-action@v0.2.0
        with:
          image: ${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}:${{ env.BRANCH }}
          config: tests/container-structure-tests.yml
