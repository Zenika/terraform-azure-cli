name: release

# trigger on published release
on:
  # TODO delete push trigger, just for test
  push:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        uses: brpaz/hadolint-action@master
        with:
          dockerfile: "Dockerfile"

  load_supported_versions:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Read supported version JSON file
        id: set-matrix
        run: |
          SUPPORTED_VERSION=$(cat ./supported_versions.json)
          echo $SUPPORTED_VERSION
          echo "::set-output name=matrix::${SUPPORTED_VERSION}"

  build_push_release:
    runs-on: ubuntu-latest
    needs:
      - load_supported_versions
      - lint

    strategy:
      matrix: ${{ fromJSON(needs.load_supported_versions.outputs.matrix) }}

    env:
      ORGANIZATION: "zenika"
      IMAGE_NAME: "terraform-azure-cli"

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Get and save release tag
        run: echo "RELEASE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and save image release tag
        run: echo "IMAGE_RELEASE_TAG=release-${RELEASE_TAG}_terraform-${{ matrix.tf_version }}_azcli-${{ matrix.azcli_version }}" >> $GITHUB_ENV

      - name: Build image
        run: docker image build . --file Dockerfile --build-arg TERRAFORM_VERSION=${{ matrix.tf_version }} --build-arg AZURE_CLI_VERSION=${{ matrix.azcli_version }} --tag ${ORGANIZATION}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Login to Docker Hub registry
        run: echo '${{ secrets.DOCKERHUB_PASS }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image to registry
        run: docker push ${ORGANIZATION}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Save image
        run: docker image save -o ${IMAGE_NAME}-${IMAGE_RELEASE_TAG}.tar ${ORGANIZATION}/${IMAGE_NAME}:${IMAGE_RELEASE_TAG}

      - name: Upload image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_RELEASE_TAG }}
          path: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_RELEASE_TAG }}.tar
